[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\zzz\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\zzz\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 143.5614ms
[debug]       Load.loadUnit: defsScala took 0.2218ms
[debug] [Loading] Scanning directory C:\Users\zzz\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\zzz\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 12.2399 ms
[debug]           Load.resolveProject(global-plugins) took 35.7824ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\zzz\.sbt\1.0\plugins, plugins: List(<none>))) took 64.8486ms
[debug] [Loading] Done in C:\Users\zzz\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 80.1027ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2333ms
[debug]     Load.loadUnit(file:/C:/Users/zzz/.sbt/1.0/plugins/, ...) took 230.0694ms
[debug]   Load.apply: load took 356.039ms
[debug]   Load.apply: resolveProjects took 4.2565ms
[debug]   Load.apply: finalTransforms took 34.4432ms
[debug]   Load.apply: config.delegates took 5.6478ms
[debug]   Load.apply: Def.make(settings)... took 223.848ms
[debug]   Load.apply: structureIndex took 65.1192ms
[debug]   Load.apply: mkStreams took 1.4441ms
[info] loading global plugins from C:\Users\zzz\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1630.9751ms
[debug]           Load.loadUnit: plugins took 18.8472ms
[debug]           Load.loadUnit: defsScala took 0.0029ms
[debug] [Loading] Scanning directory C:\Users\zzz\Desktop\spinal_xdmaDemo\project
[debug]             Load.loadUnit: mkEval took 6.5435ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\zzz\Desktop\spinal_xdmaDemo\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.6435 ms
[info] loading settings for project spinal_xdmademo-build from idea.sbt ...
[debug]               Load.resolveProject(spinal_xdmademo-build) took 1.9615ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spinal_xdmademo-build, base: C:\Users\zzz\Desktop\spinal_xdmaDemo\project, plugins: List(<none>))) took 4.0578ms
[debug] [Loading] Done in C:\Users\zzz\Desktop\spinal_xdmaDemo\project, returning: (spinal_xdmademo-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 108.181ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.9782ms
[debug]         Load.loadUnit(file:/C:/Users/zzz/Desktop/spinal_xdmaDemo/project/, ...) took 130.7134ms
[debug]       Load.apply: load took 131.6025ms
[debug]       Load.apply: resolveProjects took 0.0999ms
[debug]       Load.apply: finalTransforms took 6.2487ms
[debug]       Load.apply: config.delegates took 0.1969ms
[debug]       Load.apply: Def.make(settings)... took 51.49ms
[debug]       Load.apply: structureIndex took 21.4782ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Users\zzz\Desktop\spinal_xdmaDemo\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 433.1576ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\zzz\Desktop\spinal_xdmaDemo
[debug]       Load.loadUnit: mkEval took 0.3131ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\zzz\Desktop\spinal_xdmaDemo, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0774 ms
[info] loading settings for project spinal_xdmademo from build.sbt ...
[debug]         Load.resolveProject(spinal_xdmademo) took 22.7414ms
[debug]       Load.loadTransitive: finalizeProject(Project(id spinal_xdmademo, base: C:\Users\zzz\Desktop\spinal_xdmaDemo, plugins: List(<none>))) took 25.8852ms
[debug] [Loading] Done in C:\Users\zzz\Desktop\spinal_xdmaDemo, returning: (spinal_xdmademo)
[debug]     Load.loadUnit: loadedProjectsRaw took 92.0968ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.693ms
[debug]   Load.loadUnit(file:/C:/Users/zzz/Desktop/spinal_xdmaDemo/, ...) took 528.5077ms
[debug] Load.apply: load took 529.8107ms
[debug] Load.apply: resolveProjects took 0.0998ms
[debug] Load.apply: finalTransforms took 17.7822ms
[debug] Load.apply: config.delegates took 0.3679ms
[debug] Load.apply: Def.make(settings)... took 43.5715ms
[debug] Load.apply: structureIndex took 20.3579ms
[debug] Load.apply: mkStreams took 0.0042ms
[info] set current project to spinal_xdmaDemo (in build file:/C:/Users/zzz/Desktop/spinal_xdmaDemo/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
